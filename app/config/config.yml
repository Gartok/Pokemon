imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@RaufletBundle/Resources/config/services.yml" }
    - { resource: "@RaufletBundle/Resources/config/admin.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr
    sonata.user.admin.user.class: RaufletBundle\Admin\UserAdmin

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
#        entity_managers:
#            default:
#                mappings:
#                    ApplicationSonataUserBundle: ~
#                    SonataUserBundle: ~
#                    FOSUserBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sonata_block:
    default_contexts: [cms]
    blocks:
        # enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts: [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes

sonata_admin:
    title: Pokemon
    title_logo: /bundles/rauflet/images/logo.png
    dashboard:
        blocks:
            -
                position: left
                type: sonata.admin.block.admin_list
                settings:
                    groups: [sonata_page1, sonata_page4, sonata_page5]
            -
                position: right
                type: sonata.admin.block.admin_list
                settings:
                    groups: [sonata_page2, sonata_page3]
            -
                position: center
                type: sonata.admin.block.admin_list
                settings:
                    groups: [sonata_page6]

        groups:
            sonata_page1:
                label: "Gestion des Objets"
                items:
                    - app.admin.objects
                    - app.admin.objects.type

            sonata_page2:
                label: "Gestion des Pokemons"
                items:
                    - app.admin.pokedex
                    - app.admin.pokemons
                    - app.admin.pokemons.type

            sonata_page3:
                label: "Gestion des Types"
                items:
                    - app.admin.attack
                    - app.admin.type
                    - app.admin.strong.against
                    - app.admin.weak.against

            sonata_page4:
                label: "Gestion des Dresseurs"
                items:
                    - app.admin.arena
                    - app.admin.badge
                    - app.admin.npc
                    - sonata.user.admin.user
                    - app.admin.win

            sonata_page5:
                label: "Gestion de la carte"
                items:
                    - app.admin.position
                    - app.admin.zone

            sonata_page6:
                label: "Administration"
                items:
                    - app.admin.request.sql

sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    profile:
        # Profile show page is a dashboard as in SonataAdminBundle
        dashboard:
            blocks:
                - { position: left, type: sonata.block.service.text, settings: { content: "<h2>Welcome!</h2> This is a sample user profile dashboard, feel free to override it in the configuration! Want to make this text dynamic? For instance display the user's name? Create a dedicated block and edit the configuration!"} }
#                - { position: left, type: sonata.order.block.recent_orders, settings: { title: Recent Orders, number: 5, mode: public }}
#                - { position: right, type: sonata.timeline.block.timeline, settings: { max_per_page: 15 }}
#                - { position: right, type: sonata.news.block.recent_posts, settings: { title: Recent Posts, number: 5, mode: public }}
#                - { position: right, type: sonata.news.block.recent_comments, settings: { title: Recent Comments, number: 5, mode: public }}

        menu:
            - { route: 'sonata_user_profile_show', label: 'sonata_profile_title', domain: 'SonataUserBundle'}
#            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
#            - { route: 'sonata_customer_addresses', label: 'link_list_addresses', domain: 'SonataCustomerBundle'}
#            - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle'}
#            - { route: 'sonata_order_index', label: 'order_list', domain: 'SonataOrderBundle'}

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class:   Sonata\UserBundle\Entity\BaseGroup
        group_manager: sonata.user.orm.group_manager                    # If you're using doctrine orm (use sonata.user.mongodb.group_manager for mongodb)

    service:
        user_manager: sonata.user.orm.user_manager                      # If you're using doctrine orm (use sonata.user.mongodb.user_manager for mongodb)