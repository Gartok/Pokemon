<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Doctrine\ORM\Mapping as ORM;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class User extends BaseUser
{
    /**
     * @var int $id
     */
    protected $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @ORM\OneToMany(targetEntity="RaufletBundle\Entity\Pokemons", mappedBy="trainer")
     */
    private $pokemons;

    /**
     * @ORM\OneToMany(targetEntity="RaufletBundle\Entity\Win", mappedBy="trainer")
     */
    private $wins;

    /**
     * @ORM\OneToMany(targetEntity="RaufletBundle\Entity\Objects", mappedBy="trainer")
     */
    private $objects;

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return Trainer
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        parent::__construct();
        $this->pokemons = new \Doctrine\Common\Collections\ArrayCollection();
        $this->wins = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add pokemon
     *
     * @param \RaufletBundle\Entity\Pokemons $pokemon
     *
     * @return Trainer
     */
    public function addPokemon(\RaufletBundle\Entity\Pokemons $pokemon)
    {
        $this->pokemons[] = $pokemon;

        return $this;
    }

    /**
     * Remove pokemon
     *
     * @param \RaufletBundle\Entity\Pokemons $pokemon
     */
    public function removePokemon(\RaufletBundle\Entity\Pokemons $pokemon)
    {
        $this->pokemons->removeElement($pokemon);
    }

    /**
     * Get pokemons
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPokemons()
    {
        return $this->pokemons;
    }

    /**
     * Add win
     *
     * @param \RaufletBundle\Entity\Win $win
     *
     * @return Trainer
     */
    public function addWin(\RaufletBundle\Entity\Win $win)
    {
        $this->wins[] = $win;

        return $this;
    }

    /**
     * Remove win
     *
     * @param \RaufletBundle\Entity\Win $win
     */
    public function removeWin(\RaufletBundle\Entity\Win $win)
    {
        $this->wins->removeElement($win);
    }

    /**
     * Get wins
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getWins()
    {
        return $this->wins;
    }

    /**
     * Add object
     *
     * @param \RaufletBundle\Entity\Objects $object
     *
     * @return Trainer
     */
    public function addObject(\RaufletBundle\Entity\Objects $object)
    {
        $this->objects[] = $object;

        return $this;
    }

    /**
     * Remove object
     *
     * @param \RaufletBundle\Entity\Objects $object
     */
    public function removeObject(\RaufletBundle\Entity\Objects $object)
    {
        $this->objects->removeElement($object);
    }

    /**
     * Get objects
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getObjects()
    {
        return $this->objects;
    }
}
